<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" mc:Ignorable="d"
    x:Class="wSignerUI.MainWindow"
    x:Name="Window"
    Title="wSigner" KeyUp="Window_KeyUp" Icon="/wSignerUI;component/Application.ico" SizeToContent="Height" Width="320" Background="{x:Null}" AllowsTransparency="True" WindowStyle="None">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style TargetType="ListBoxItem">
            <Style.Resources>
              <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00FFFFFF"/>
              <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#00FFFFFF"/>
            </Style.Resources>
        </Style>
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border>
                            <Rectangle Margin="4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LinkButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="0,0,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="ContentContainer" BorderThickness="0" SnapsToDevicePixels="true" BorderBrush="{x:Null}" BorderStyle="None">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Cursor)" Storyboard.TargetName="textBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Cursor>None</Cursor>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="Focused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBlock x:Name="textBlock" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Left" TextTrimming="CharacterEllipsis" Foreground="{TemplateBinding Foreground}" Cursor="Hand" RenderTransformOrigin="0.5,0.5" TextDecorations="Underline" Margin="4" Text="{TemplateBinding Content}"><TextBlock.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </TextBlock.RenderTransform></TextBlock>
                        </Microsoft_Windows_Themes:ClassicBorderDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedFocused"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                <Setter Property="BorderStyle" TargetName="ContentContainer" Value="RaisedPressed"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border x:Name="LayoutRoot" MouseDown="LayoutRoot_MouseDown" ScrollViewer.VerticalScrollBarVisibility="Disabled" CornerRadius="8" >
        <Border.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FF8B8B8B" Offset="0"/>
                <GradientStop Color="#FF8B8B8B" Offset="1"/>
                <GradientStop Color="White" Offset="0.5"/>
            </LinearGradientBrush>
        </Border.Background>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0" Margin="8,8,8,0" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap" Visibility="{Binding Path=HasCert, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" >
                <Run>Sign document as:</Run>
                <InlineUIContainer BaselineAlignment="Center">
                    <Button Style="{DynamicResource LinkButton}" Content="{Binding CertSubject}" Command="{Binding ShowActiveCert}"></Button>
                </InlineUIContainer>
                <Run> </Run>
                <InlineUIContainer BaselineAlignment="Center">
                    <Image Grid.Column="1" Width="16" Height="16" Source="/wSignerUI;component/Resources/icon-error-16x16.png" Visibility="{Binding Path=CertHasError, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}">
                        <Image.ToolTip>
                            <TextBlock Text="{Binding CertError}"></TextBlock>
                        </Image.ToolTip>
                    </Image>
                </InlineUIContainer>
                <Run>or</Run>
                <InlineUIContainer BaselineAlignment="Center">
                    <Button Command="{Binding ShowCertsDialog}" Content="Choose another signature" HorizontalAlignment="Center" Grid.Column="2" Style="{DynamicResource LinkButton}"/>
                </InlineUIContainer>
            </TextBlock>
            <TextBlock Grid.Row="0" Margin="8,8,8,0" HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Visibility="{Binding Path=HasNoCert, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" >
                <Run>No usable digital signature found, please install a suitable digital signature and</Run>
                <InlineUIContainer BaselineAlignment="Center">
                    <Button Command="{Binding ShowCertsDialog}" Content="Choose again" HorizontalAlignment="Center" Grid.Column="2" Style="{DynamicResource LinkButton}"/>
                </InlineUIContainer>
            </TextBlock>
            <ListBox
                IsSynchronizedWithCurrentItem="True"
                HorizontalContentAlignment="Stretch"
                ItemsSource="{Binding Jobs}"
                Drop="Window_Drop" 
                AllowDrop="True" 
                DragEnter="Window_DragEnter"
                Grid.Row="1"
                MinHeight="40" Margin="8,0,8,16" BorderBrush="{x:Null}" Background="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid HorizontalAlignment="Stretch" Height="32" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="32"/>
                                <ColumnDefinition Width="188"/>
                                <ColumnDefinition Width="84"/>
                            </Grid.ColumnDefinitions>
                            <Image Source="{Binding Icon}" Grid.Column="0"/>
                            <Image Source="/wSignerUI;component/Resources/icon-ok-16x16.png" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="16" Width="16" Grid.Column="0" Visibility="{Binding IsSuccessful, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}"/>
                            <Image Source="/wSignerUI;component/Resources/icon-error-16x16.png" VerticalAlignment="Bottom" HorizontalAlignment="Right" Height="16" Width="16" Grid.Column="0" Visibility="{Binding IsFaulted, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}">
                                <Image.ToolTip>
                                    <TextBlock Text="{Binding Error}"></TextBlock>
                                </Image.ToolTip>
                            </Image>
                            <Button Content="{Binding InputFileName}" Command="{Binding OpenInput}" Grid.Column="1" Style="{DynamicResource LinkButton}" Width="188" MaxWidth="188"/>
                            <StackPanel Orientation="Horizontal" Grid.Column="2">
                                <Button Visibility="{Binding IsReady, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" Command="{Binding Sign}" Content="Sign" Style="{DynamicResource LinkButton}"/>
                                <Button Visibility="{Binding IsSuccessful, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" Command="{Binding OpenOutput}" Content="Result" Style="{DynamicResource LinkButton}"/>
                                <Button Visibility="{Binding IsFree, Converter={StaticResource ResourceKey=BooleanToVisibilityConverter}}" Command="{Binding Close}" Content="Close" Style="{DynamicResource LinkButton}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <TextBlock Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,4" Opacity="0.5"><Run Text="Drop your documents here to sign them"/></TextBlock>
        </Grid>
    </Border>
</Window>